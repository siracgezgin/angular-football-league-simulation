{"ast":null,"code":"// src/app/store/league/league.actions.ts\nimport { createAction, props } from '@ngrx/store';\n// League initialization\nexport const initializeLeague = createAction('[League] Initialize League');\nexport const initializeLeagueSuccess = createAction('[League] Initialize League Success', props());\nexport const initializeLeagueFailure = createAction('[League] Initialize League Failure', props());\n// Next week actions\nexport const playNextWeek = createAction('[League] Play Next Week');\nexport const playNextWeekSuccess = createAction('[League] Play Next Week Success', props());\n// Play all season\nexport const playAllSeason = createAction('[League] Play All Season');\nexport const playAllSeasonSuccess = createAction('[League] Play All Season Success', props());\n// Edit match result\nexport const editMatchResult = createAction('[League] Edit Match Result', props());\nexport const editMatchResultSuccess = createAction('[League] Edit Match Result Success', props());\n// Calculate standings\nexport const calculateStandings = createAction('[League] Calculate Standings');\nexport const calculateStandingsSuccess = createAction('[League] Calculate Standings Success');\n// Reset league\nexport const resetLeague = createAction('[League] Reset League');\n// Loading states\nexport const setLoading = createAction('[League] Set Loading', props());\n// Error handling\nexport const setError = createAction('[League] Set Error', props());\n// Clear error\nexport const clearError = createAction('[League] Clear Error');","map":{"version":3,"names":["createAction","props","initializeLeague","initializeLeagueSuccess","initializeLeagueFailure","playNextWeek","playNextWeekSuccess","playAllSeason","playAllSeasonSuccess","editMatchResult","editMatchResultSuccess","calculateStandings","calculateStandingsSuccess","resetLeague","setLoading","setError","clearError"],"sources":["C:\\Users\\sirac\\OneDrive\\Masaüstü\\futbol-ligi-simulasyonu\\src\\app\\store\\league\\league.actions.ts"],"sourcesContent":["// src/app/store/league/league.actions.ts\r\n\r\nimport { createAction, props } from '@ngrx/store';\r\nimport { Team } from '../../models/team.model';\r\nimport { Match, MatchEdit } from '../../models/match.model';\r\n\r\n// League initialization\r\nexport const initializeLeague = createAction('[League] Initialize League');\r\nexport const initializeLeagueSuccess = createAction(\r\n  '[League] Initialize League Success',\r\n  props<{ teams: Team[]; matches: Match[] }>()\r\n);\r\nexport const initializeLeagueFailure = createAction(\r\n  '[League] Initialize League Failure',\r\n  props<{ error: string }>()\r\n);\r\n\r\n// Next week actions\r\nexport const playNextWeek = createAction('[League] Play Next Week');\r\nexport const playNextWeekSuccess = createAction(\r\n  '[League] Play Next Week Success',\r\n  props<{ matches: Match[]; currentWeek: number }>()\r\n);\r\n\r\n// Play all season\r\nexport const playAllSeason = createAction('[League] Play All Season');\r\nexport const playAllSeasonSuccess = createAction(\r\n  '[League] Play All Season Success',\r\n  props<{ allMatches: Match[]; finalWeek: number }>()\r\n);\r\n\r\n// Edit match result\r\nexport const editMatchResult = createAction(\r\n  '[League] Edit Match Result',\r\n  props<{ matchEdit: MatchEdit }>()\r\n);\r\nexport const editMatchResultSuccess = createAction(\r\n  '[League] Edit Match Result Success',\r\n  props<{ updatedMatch: Match }>()\r\n);\r\n\r\n// Calculate standings\r\nexport const calculateStandings = createAction('[League] Calculate Standings');\r\nexport const calculateStandingsSuccess = createAction(\r\n  '[League] Calculate Standings Success'\r\n);\r\n\r\n// Reset league\r\nexport const resetLeague = createAction('[League] Reset League');\r\n\r\n// Loading states\r\nexport const setLoading = createAction(\r\n  '[League] Set Loading',\r\n  props<{ loading: boolean }>()\r\n);\r\n\r\n// Error handling\r\nexport const setError = createAction(\r\n  '[League] Set Error',\r\n  props<{ error: string | null }>()\r\n);\r\n\r\n// Clear error\r\nexport const clearError = createAction('[League] Clear Error');"],"mappings":"AAAA;AAEA,SAASA,YAAY,EAAEC,KAAK,QAAQ,aAAa;AAIjD;AACA,OAAO,MAAMC,gBAAgB,GAAGF,YAAY,CAAC,4BAA4B,CAAC;AAC1E,OAAO,MAAMG,uBAAuB,GAAGH,YAAY,CACjD,oCAAoC,EACpCC,KAAK,EAAuC,CAC7C;AACD,OAAO,MAAMG,uBAAuB,GAAGJ,YAAY,CACjD,oCAAoC,EACpCC,KAAK,EAAqB,CAC3B;AAED;AACA,OAAO,MAAMI,YAAY,GAAGL,YAAY,CAAC,yBAAyB,CAAC;AACnE,OAAO,MAAMM,mBAAmB,GAAGN,YAAY,CAC7C,iCAAiC,EACjCC,KAAK,EAA6C,CACnD;AAED;AACA,OAAO,MAAMM,aAAa,GAAGP,YAAY,CAAC,0BAA0B,CAAC;AACrE,OAAO,MAAMQ,oBAAoB,GAAGR,YAAY,CAC9C,kCAAkC,EAClCC,KAAK,EAA8C,CACpD;AAED;AACA,OAAO,MAAMQ,eAAe,GAAGT,YAAY,CACzC,4BAA4B,EAC5BC,KAAK,EAA4B,CAClC;AACD,OAAO,MAAMS,sBAAsB,GAAGV,YAAY,CAChD,oCAAoC,EACpCC,KAAK,EAA2B,CACjC;AAED;AACA,OAAO,MAAMU,kBAAkB,GAAGX,YAAY,CAAC,8BAA8B,CAAC;AAC9E,OAAO,MAAMY,yBAAyB,GAAGZ,YAAY,CACnD,sCAAsC,CACvC;AAED;AACA,OAAO,MAAMa,WAAW,GAAGb,YAAY,CAAC,uBAAuB,CAAC;AAEhE;AACA,OAAO,MAAMc,UAAU,GAAGd,YAAY,CACpC,sBAAsB,EACtBC,KAAK,EAAwB,CAC9B;AAED;AACA,OAAO,MAAMc,QAAQ,GAAGf,YAAY,CAClC,oBAAoB,EACpBC,KAAK,EAA4B,CAClC;AAED;AACA,OAAO,MAAMe,UAAU,GAAGhB,YAAY,CAAC,sBAAsB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}